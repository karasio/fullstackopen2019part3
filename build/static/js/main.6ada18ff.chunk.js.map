{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filterValue","handleFilter","value","onChange","PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","onSubmit","type","Numbers","person","deletePerson","namesToShow","filter","name","toLowerCase","includes","map","dude","key","number","onClick","Notification","message","sort","console","log","className","msg","App","useState","setPersons","setNewName","setNewNumber","setFilterValue","notification","setNotification","useEffect","numberService","initialNumbers","event","target","preventDefault","personUpdated","personObject","split","s","charAt","toUpperCase","substring","join","onList","forEach","changeNumber","window","confirm","setTimeout","returnedPerson","catch","error","concat","deletablePerson","find","p","ReactDOM","render","document","getElementById"],"mappings":"+OAEMA,EAAU,eA0BD,EAxBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAsB5B,EAnBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAdA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,EATA,SAACG,GAEd,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCsIrCM,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7B,OACI,8BACE,kDACoB,2BAChBC,MAAOF,EACPG,SAAUF,OAOhBG,EAAa,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,mBAAoBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACvE,OACI,0BAAMC,SAAUL,GACd,sCACQ,2BACJH,MAAOI,EACPH,SAAUI,IAEZ,wCACU,2BACNL,MAAOM,EACPL,SAAUM,MAIhB,6BACE,4BAAQE,KAAK,UAAb,UAMJC,EAAU,SAAC,GAA2C,IAAzCZ,EAAwC,EAAxCA,YAAaa,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAChCC,EAAcF,EAAOG,QAAO,SAAAH,GAAM,OAAIA,EAAOI,KAAKC,cAAcC,SAASnB,MAQ/E,OACI,6BACE,4BARgBe,EAAYK,KAAK,SAAAC,GAAI,OACvC,wBAAIC,IAAKD,EAAKJ,MACXI,EAAKJ,KADR,IACeI,EAAKE,OAClB,4BAAQC,QAAS,kBAAMV,EAAaO,EAAKzB,MAAzC,iBAYF6B,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,MAAqB,UAAjBA,EAAQC,MACVC,QAAQC,IAAI,aAER,yBAAKC,UAAU,SACZJ,EAAQK,MAKE,OAAhBL,EAAQK,KACTH,QAAQC,IAAI,kBAEL,OAGTD,QAAQC,IAAI,gBAER,yBAAKC,UAAU,gBACZJ,EAAQK,OAKFC,EApOH,WAAO,IAAD,EACaC,mBAAU,IADvB,mBACTpB,EADS,KACDqB,EADC,OAEcD,mBAAS,IAFvB,mBAET3B,EAFS,KAEA6B,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTzB,EAHS,KAGE4B,EAHF,OAIsBH,mBAAS,IAJ/B,mBAITjC,EAJS,KAIIqC,EAJJ,OAKwBJ,mBAAS,CAACF,IAAK,KAAMJ,KAAM,OALnD,mBAKTW,EALS,KAKKC,EALL,KAOhBC,qBAAW,WACTC,IAEKlD,MAAK,SAAAmD,GACJR,EAAWQ,QAEhB,IAmHH,OACI,6BACE,yCACA,kBAAC,EAAD,CAAchB,QAASY,IACvB,kBAAC,EAAD,CAAQtC,YAAaA,EAAaC,aAnGnB,SAAC0C,GACpBN,EAAeM,EAAMC,OAAO1C,UAmGxB,yCACA,kBAAC,EAAD,CACIG,UAlGQ,SAACsC,GACjBA,EAAME,iBAEN,IAQIC,EAPEC,EACF,CACE9B,KAHkB,CAAEX,WAxBNA,QACLY,cACV8B,MAAM,KACN5B,KAAI,SAAC6B,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,MACnDC,KAAK,KAwBJ9B,OAAQf,GAGV8C,GAAS,EAWb,GARAzC,EAAO0C,SAAQ,SAAArD,GACPA,EAAMe,OAAS8B,EAAa9B,OAC9BqC,GAAO,EACPR,EAAgB5C,EAChB0B,QAAQC,IAAI,SAASiB,EAAe,SAAUQ,OAI/CA,EAmBE,CACL,IAAME,EAAeC,OAAOC,QAAP,UAAkBpD,EAAlB,uEACrBsB,QAAQC,IAAI,eAAgB2B,GACxBA,GACFf,EACYK,EAAclD,GAAImD,GACzBxD,MAAM,WAELgD,EAAgB,CAACR,IAAI,2BAAD,OAA6BgB,EAAa9B,KAA1C,eAAqD8B,EAAaxB,QAAUI,KAAM,SACtGgC,YAAW,WACTpB,EAAgB,CAACR,IAAK,KAAMJ,KAAM,SACjC,KACHc,IAEKlD,MAAK,SAAAqE,GACJ1B,EAAW0B,SAGlBC,OAAM,SAAAC,GACPvB,EAAgB,CAACR,IAAI,kBAAD,OAAoBgB,EAAa9B,KAAjC,6BAAkEU,KAAM,UAC5FgC,YAAW,WACTpB,EAAgB,CAACR,IAAK,KAAMJ,KAAM,SAEjC,aAzCTc,EACYM,GACPxD,MAAK,SAAAqE,GACJ1B,EAAWrB,EAAOkD,OAAOH,IAC3BzB,EAAW,IACXC,EAAa,IACbG,EAAgB,CAACR,IAAI,SAAD,OAAW6B,EAAe3C,MAAQU,KAAM,SAC5DgC,YAAW,WACTpB,EAAgB,CAACR,IAAK,KAAMJ,KAAM,SACjC,QAEFkC,OAAM,SAAAC,GACLlC,QAAQC,IAAIiC,EAAMtE,SAASC,MAC3B8C,EAAgB,CAACR,IAAK+B,EAAMtE,SAASC,KAAMkC,KAAM,UACjDgC,YAAW,WACTpB,EAAgB,CAACR,IAAK,KAAMJ,KAAM,cA8DpCrB,QAASA,EACTC,mBAlHiB,SAACoC,GAG1BR,EAAWQ,EAAMC,OAAO1C,QAgHhBO,mBA7GiB,SAACkC,GAC1BP,EAAaO,EAAMC,OAAO1C,QA6GlBM,UAAWA,IAEf,uCACA,kBAAC,EAAD,CACER,YAAaA,EACba,OAAQA,EACRC,aArCa,SAAAlB,GACnB,IAAMoE,EAAkBnD,EAAOoD,MAAK,SAAAC,GAAC,OAAIA,EAAEtE,KAAOA,KAC7B6D,OAAOC,QAAP,iBAAyBM,EAAgB/C,KAAzC,OAGrBwB,EACQ7C,GACPL,MAAK,WACJgD,EAAgB,CAACR,IAAI,WAAD,OAAaiC,EAAgB/C,MAAQU,KAAM,SAC/DgC,YAAW,WACTpB,EAAgB,CAACR,IAAK,KAAMJ,KAAM,SACjC,KACHc,IAEClD,MAAK,SAAAqE,GACJ1B,EAAW0B,c,MC1HnBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6ada18ff.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data);\n};\n\n// const delete = (id) => {\n//   const request = axios.\n// };\n\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport numberService from './services/numbers'\n\n\nconst App = () => {\n  const [person, setPersons] = useState ([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [notification, setNotification] = useState({msg: null, sort: null});\n\n  useEffect( () => {\n    numberService\n        .getAll()\n        .then(initialNumbers => {\n          setPersons(initialNumbers)\n    })\n  }, []);\n\n\n  const capitalize = ({ newName }) => {\n    return newName.toLowerCase()\n        .split(/ /)\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(' ');\n  };\n\n  const handlePersonChange = (event) => {\n    //let temp = event.target.value;\n    //temp = capitalize({temp});\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setFilterValue(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const name = capitalize({ newName });\n    const personObject =\n        {\n          name: name,\n          number: newNumber\n        };\n\n    let onList = false;\n    let personUpdated;\n\n    person.forEach(value => {\n        if (value.name === personObject.name) {\n          onList=true;\n          personUpdated = value;\n          console.log(\"rivi58\",personUpdated, \"onlist\", onList);\n        }\n    });\n\n    if (!onList) {              // TOIMII\n      numberService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(person.concat(returnedPerson))\n          setNewName('');\n          setNewNumber('');\n          setNotification({msg: `Added ${returnedPerson.name}`, sort: 'info'});\n          setTimeout(() => {\n            setNotification({msg: null, sort: null});\n          }, 5000)\n      })\n          .catch(error => {\n            console.log(error.response.data);\n            setNotification({msg: error.response.data, sort: \"error\"});\n            setTimeout(() => {\n              setNotification({msg: null, sort: null})\n            })\n      })\n    } else {\n      const changeNumber = window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`);\n      console.log(\"changeNumber\", changeNumber);\n      if (changeNumber) {\n        numberService\n            .update(personUpdated.id, personObject)\n            .then (() => {\n\n              setNotification({msg: `Updated phone number of ${personObject.name} to ${personObject.number}`, sort: \"info\"});\n              setTimeout(() => {\n                setNotification({msg: null, sort: null});\n              }, 5000);\n              numberService\n                  .getAll()\n                  .then(returnedPerson => {\n                    setPersons(returnedPerson)\n              })\n        })\n            .catch(error => {\n            setNotification({msg: `Information of ${personObject.name} has been removed already`, sort: \"error\"});\n            setTimeout(() => {\n              setNotification({msg: null, sort: null});\n\n            }, 5000);\n        })\n      }\n    }\n\n\n  };\n\n  const deletePerson = id => {\n    const deletablePerson = person.find(p => p.id === id);\n    const sureToDelete = window.confirm(`Delete ${deletablePerson.name}?`);\n\n  if(sureToDelete) {\n    numberService\n    .remove(id)\n    .then(() => {\n      setNotification({msg: `Removed ${deletablePerson.name}`, sort: \"info\"});\n      setTimeout(() => {\n        setNotification({msg: null, sort: null});\n      }, 5000);\n      numberService\n      .getAll()\n      .then(returnedPerson => {\n        setPersons(returnedPerson);\n      })\n    })\n  }};\n\n  return (\n      <div>\n        <h2>Phonebook</h2>\n        <Notification message={notification}/>\n        <Filter filterValue={filterValue} handleFilter = {handleFilter}/>\n        <h3>Add a new</h3>\n        <PersonForm\n            addPerson={addPerson}\n            newName={newName}\n            handlePersonChange={handlePersonChange}\n            handleNumberChange={handleNumberChange}\n            newNumber={newNumber}\n        />\n        <h3>Numbers</h3>\n        <Numbers\n          filterValue={filterValue}\n          person={person}\n          deletePerson={deletePerson}\n        />\n      </div>\n  )\n};\n\nconst Filter = ({ filterValue, handleFilter }) => {\n  return (\n      <form>\n        <div>\n          filter shown with <input\n            value={filterValue}\n            onChange={handleFilter}\n        />\n        </div>\n      </form>\n  )\n};\n\nconst PersonForm = ({ addPerson, newName, handlePersonChange, newNumber, handleNumberChange }) => {\n  return (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input\n            value={newName}\n            onChange={handlePersonChange}\n        />\n          <div>\n            number: <input\n              value={newNumber}\n              onChange={handleNumberChange}\n          />\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n};\n\nconst Numbers = ({ filterValue, person, deletePerson }) => {\n  const namesToShow = person.filter(person => person.name.toLowerCase().includes(filterValue));\n\n  const numbers = () => namesToShow.map( dude =>\n      <li key={dude.name}>\n        {dude.name} {dude.number}\n        <button onClick={() => deletePerson(dude.id)}>delete</button>\n      </li>\n  );\n  return (\n      <div>\n        <ul>\n        {numbers()}\n        </ul>\n      </div>\n  )\n};\n\nconst Notification = ({ message }) => {\n  if (message.sort === 'error' ) {\n    console.log('errorissa');\n    return (\n        <div className=\"error\">\n          {message.msg}\n        </div>\n    )\n  }\n\n  if(message.msg === null) {\n    console.log('ei virheitä');\n\n    return null;\n  }\n\n  console.log('notifikaatio');\n  return (\n      <div className=\"notification\">\n        {message.msg}\n      </div>\n  )\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}